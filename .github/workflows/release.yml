name: Auto Release

on:
  push:
    branches: [ master, main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  workflow_dispatch:
    inputs:
      version:
        description: '发布版本号 (例如: 1.0.0)'
        required: true
        default: '0.1.0'
      prerelease:
        description: '是否为预发布版本'
        type: boolean
        required: false
        default: false

jobs:
  build:
    if: "contains(github.event.head_commit.message, '[release]') || github.event_name == 'workflow_dispatch'"
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        
    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile scan.py --name mcserverradar-scanner
        pyinstaller --onefile web.py --name mcserverradar-web
        
    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oP '\[release\s+v\K[0-9]+\.[0-9]+\.[0-9]+')
          if [ -z "$VERSION" ]; then
            VERSION=0.1.0
          fi
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release ZIP
      run: |
        mkdir -p release
        cp dist/* release/
        cp README*.md release/
        cp -r docs release/
        cp requirements.txt release/
        cd release
        zip -r ../mcserverradar-${{ steps.get_version.outputs.version }}.zip *
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: mcserverradar-${{ steps.get_version.outputs.version }}.zip
        tag_name: v${{ steps.get_version.outputs.version }}
        name: Release v${{ steps.get_version.outputs.version }}
        body: |
          MCServerRadar Release v${{ steps.get_version.outputs.version }}
          
          Changes in this release:
          ${{ github.event.head_commit.message }}
          
          包含文件:
          - mcserverradar-scanner (扫描工具)
          - mcserverradar-web (Web界面)
          - 文档和配置文件
        draft: false
        prerelease: ${{ github.event.inputs.prerelease || false }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 